// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecuritiesApi.Data;

namespace SecuritiesApi.Data.Migrations
{
    [DbContext(typeof(FinanceSecurityContext))]
    [Migration("20180902011244_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecuritiesApi.Domain.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("SecuritiesApi.Domain.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Change");

                    b.Property<string>("Company");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<decimal>("Last");

                    b.Property<decimal>("PercentChange");

                    b.Property<DateTime>("RetrievalDateTime");

                    b.Property<decimal>("Shares");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("Securities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Security");
                });

            modelBuilder.Entity("SecuritiesApi.Domain.MutualFund", b =>
                {
                    b.HasBaseType("SecuritiesApi.Domain.Security");

                    b.Property<int>("MorningStarRating");

                    b.ToTable("MutualFund");

                    b.HasDiscriminator().HasValue("MutualFund");
                });

            modelBuilder.Entity("SecuritiesApi.Domain.Stock", b =>
                {
                    b.HasBaseType("SecuritiesApi.Domain.Security");

                    b.Property<decimal>("AverageVolume");

                    b.Property<decimal>("AverageVolume30");

                    b.Property<decimal>("DayHigh");

                    b.Property<decimal>("DayLow");

                    b.Property<decimal>("Dividend");

                    b.Property<int>("ExchangeId");

                    b.Property<decimal>("MarketCap");

                    b.Property<decimal>("Open");

                    b.Property<decimal>("Volume");

                    b.Property<decimal>("YearHigh");

                    b.Property<decimal>("YearLow");

                    b.HasIndex("ExchangeId");

                    b.ToTable("Stock");

                    b.HasDiscriminator().HasValue("Stock");
                });

            modelBuilder.Entity("SecuritiesApi.Domain.Stock", b =>
                {
                    b.HasOne("SecuritiesApi.Domain.Exchange", "Exchange")
                        .WithMany()
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
